service:
  name: starter-appsync

plugins:
  - serverless-webpack
  - serverless-appsync-plugin
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

custom:
  webpack:
    webpackConfig: ./config/webpack.config.js
    packagePath: ./package.json
    packager: npm
    forceExclude:
      - aws-sdk
  appSync:
    name: ${self:provider.stage}-${self:service.name}
    authenticationType: AMAZON_COGNITO_USER_POOLS
    schema: ./aws/schema.graphql
    mappingTemplatesLocation: ./aws/templates
    userPoolConfig:
      awsRegion: ${self:provider.region}
      defaultAction: ALLOW
      userPoolId: !Ref CognitoUserPool
    dataSources:
      - ${file(./aws/appsync_datasources.yml)}
    mappingTemplates:
      - ${file(./aws/appsync_resolvers.yml)}
  serverless-iam-roles-per-function:
    defaultInherit: true
  ssmPath:
    sentry_dsn: ${ssm:/starter_appsync/sentry_dsn, ''}
    google_client_id: ${ssm:/starter_appsync/google_client_id, ''}
    google_client_secret: ${ssm:/starter_appsync/google_client_secret, ''}

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 10 # seconds
  memorySize: 512
  stage: ${opt:region, 'dev'}
  region: ${opt:region, 'us-east-1'}
  logRetentionInDays: 7
  stackName: ${self:provider.stage}-${self:service.name}
  profile: deployuser-${self:provider.stage}
  tags:
    project: ${self:provider.stage}-${self:service.name}
  iamRoleStatements:
    - Sid: AllowCreateLogGroup
      Effect: Allow
      Action: logs:CreateLogGroup
      Resource:
        - 'arn:aws:logs:#{AWS::Region}:#{AWS::AccountId}:log-group:/aws/lambda/*:*:*'
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256
  environment:
    SENTRY_DSN: ${self:custom.ssmPath.sentry_dsn}

layers:
  dependencies:
    name: ${self:provider.stage}-${self:service.name}
    description: Appsync lambda dependencies.
    package:
      artifact: dependencies.zip
    compatibleRuntimes:
      - nodejs12.x
    licenseInfo: MIT
    retain: false

package:
  exclude:
    - .git/**
    - .serverless/**
    - node_modules/**
    - coverage/**
    - src/__tests__/**
    - aws/**
  include:
    - src/**
  excludeDevDependencies: true

functions:
  getItemQueryFn:
    name: getItemQueryFn
    handler: src/functions/getItemQueryFn.handler
    description: Sample appsync query.
    environment:
      TABLE_ITEMS: !Ref ItemsDynamodbTable
    iamRoleStatements:
      - Sid: GetItemFromTable
        Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Resource: !GetAtt ItemsDynamodbTable.Arn
    layers:
      - !Ref DependenciesLambdaLayer

  getItemsQueryFn:
    name: getItemsQueryFn
    handler: src/functions/getItemsQueryFn.handler
    description: Get user items.
    environment:
      TABLE_ITEMS: !Ref ItemsDynamodbTable
      INDEX_NAME: items-index
    iamRoleStatements:
      - Sid: GetItemsFromTable
        Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Resource:
          - !GetAtt ItemsDynamodbTable.Arn
          - !Join ['/', [!GetAtt ItemsDynamodbTable.Arn, 'index/items-index']]
    layers:
      - !Ref DependenciesLambdaLayer

  addItemMutationFn:
    name: addItemMutationFn
    handler: src/functions/addItemMutationFn.handler
    description: Sample appsync mutation.
    environment:
      TABLE_ITEMS: !Ref ItemsDynamodbTable
    iamRoleStatements:
      - Sid: SaveItemToTable
        Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Query
          - dynamodb:UpdateItem
        Resource: !GetAtt ItemsDynamodbTable.Arn
    layers:
      - !Ref DependenciesLambdaLayer

  postConfirmFn:
    name: postConfirmFn
    handler: src/functions/postConfirmFn.handler
    description: Triggers after a user confirms their email.
    iamRoleStatements:
      - Sid: AddUserToCognitoGroup
        Effect: Allow
        Action:
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminUpdateUserAttributes
        Resource: '*'
    layers:
      - !Ref DependenciesLambdaLayer

resources:
  - ${file(./aws/iam_permissions.yml)}
  - ${file(./aws/dynamodb_tables.yml)}
  - ${file(./aws/cognito_userpool.yml)}
  - ${file(./aws/cognito_identitypool.yml)}
  - ${file(./aws/stream_analytics.yml)}
